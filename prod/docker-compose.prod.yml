volumes:
  pgdata:
  redis:
  static:
  media:
  certbot_conf:
  certbot_www:

networks:
  main_network:
  django_network:


services:
  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - 80:80
      - 443:443
    volumes:
      - static:/app/static
      - media:/app/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_conf:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    networks:
      - main_network
    depends_on:
      - django
    container_name: nginx_prod

  django:
    image: school_464_django
    restart: always
    expose:
      - 8000
    env_file:
      - ./.env
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    networks:
      - main_network
      - django_network
    depends_on:
      - postgres
      - redis
    command: bash -c "
      python manage.py collectstatic --no-input &&
      python manage.py makemigrations --merge &&
      python manage.py migrate &&
      gunicorn --workers=2 --max-requests=500 backend.wsgi -b 0.0.0.0:8000"
    container_name: django_prod

  postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      - django_network
    container_name: postgres_prod

  redis:
    image: redis:alpine
    restart: always
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - ./.env
    volumes:
      - redis:/data
    networks:
      - django_network
    container_name: redis_prod
