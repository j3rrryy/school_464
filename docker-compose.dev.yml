version: "3.9"

volumes:
  pgdata:
  static:
  media:


services:
  django:
    build:
      context: .
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    depends_on:
      - postgres
      - redis
    command: bash -c "python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: django_dev

  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - "80:80"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/dev/:/etc/nginx/conf.d:ro
    links:
      - django
    depends_on:
      - django
    container_name: nginx_dev

  postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - docker/env/.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data/
    container_name: postgres_dev

  redis:
    image: redis:alpine
    restart: always
    command:
      - redis-server
    ports:
      - "6379:6379"
    env_file:
      - docker/env/.env.dev
    container_name: redis_dev

  celery-worker:
    build: .
    restart: always
    command: celery -A backend worker --loglevel=debug
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - media:/app/media
    depends_on:
      - redis
    container_name: celery-worker_dev

  celery-beat:
    build: .
    restart: always
    command: celery -A backend beat --loglevel=debug
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - media:/app/media
    depends_on:
      - redis
    container_name: celery-beat_dev
