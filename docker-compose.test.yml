volumes:
  pgdata:
  redis:
  static:
  media:


services:
  django:
    image: django:test
    env_file:
      - ./test/.env
    volumes:
      - static:/app/static
      - media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "
      uv sync --group test &&
      uv run --group test coverage run manage.py test --rcfile=./test/.coveragerc &&
      uv run --group test coverage xml -o ./coverage.xml"
    container_name: django_test

  postgres:
    image: postgres:17.5-alpine
    restart: unless-stopped
    env_file:
      - ./test/.env
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    container_name: postgres_test

  redis:
    image: redis:8.2-alpine
    restart: unless-stopped
    volumes:
      - redis:/data/
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    container_name: redis_test
